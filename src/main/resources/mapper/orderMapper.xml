<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxy.dao.order.OrderMapper">
  <resultMap id="BaseResultMap" type="com.zxy.entity.order.Order">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="start_sid" jdbcType="INTEGER" property="startSid" />
    <result column="stop_sid" jdbcType="INTEGER" property="stopSid" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, uid, tid, start_sid, stop_sid, createdate, status, price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zxy.entity.order.Order">
    insert into order (oid, uid, tid, 
      start_sid, stop_sid, createdate, 
      status, price)
    values (#{oid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, 
      #{startSid,jdbcType=INTEGER}, #{stopSid,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.zxy.entity.order.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="startSid != null">
        start_sid,
      </if>
      <if test="stopSid != null">
        stop_sid,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="startSid != null">
        #{startSid,jdbcType=INTEGER},
      </if>
      <if test="stopSid != null">
        #{stopSid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxy.entity.order.Order">
    update order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="startSid != null">
        start_sid = #{startSid,jdbcType=INTEGER},
      </if>
      <if test="stopSid != null">
        stop_sid = #{stopSid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxy.entity.order.Order">
    update order
    set uid = #{uid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      start_sid = #{startSid,jdbcType=INTEGER},
      stop_sid = #{stopSid,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>